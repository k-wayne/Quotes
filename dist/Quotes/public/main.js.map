{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/likes/likes.component.css","webpack:///./src/app/components/likes/likes.component.html","webpack:///./src/app/components/likes/likes.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/components/users/users.component.css","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/date-count.pipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <app-users></app-users>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './components/user/user.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LikesComponent } from './components/likes/likes.component';\nimport { DateCountPipe } from './date-count.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    UsersComponent,\n    NavbarComponent,\n    LikesComponent,\n    DateCountPipe,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".clickText {\\n  color: red;\\n}\\n.clickLike {\\n    color: green;\\n}\"","module.exports = \"<div>\\n  <button class=\\\"btn glyphicon glyphicon-thumbs-up mt-1 btn-md\\\" (click)=\\\"likeButtonClick()\\\"></button>\\n  <small style=\\\"font-size: 20px\\\" class=\\\"clickLike btn mt-2\\\">{{upperClick}}</small>\\n  <button class=\\\"btn glyphicon glyphicon-thumbs-down mt-1 btn-md\\\" (click)=\\\"dislikeButtonClick()\\\"></button>\\n  <small style=\\\"font-size: 20px\\\" class=\\\"clickText btn mt-2\\\">{{lowerClick}}</small>\\n  <a href=\\\"https://www.facebook.com\\\" class=\\\"btn glyphicon glyphicon-share mt-1 btn-md\\\">share</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-likes',\n  templateUrl: './likes.component.html',\n  styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n  upperClick: number = 0;\n  lowerClick: number = 0\n\n  likeButtonClick() {\n    this.upperClick++;\n  }\n\n  dislikeButtonClick() {\n    this.lowerClick++;\n  }\n\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n  }\n","module.exports = \"#navHead{\\n    font-size: 80px;\\n}\"","module.exports = \"<nav class=\\\"mb-3 navbar navbar-dark bg-danger \\\">\\n  <div class=\\\"container\\\">\\n    <a id=\\\"navHead\\\" href=\\\"#\\\" class=\\\"navbar-brand\\\">Quotes App</a>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>{{ user.firstName }} {{ user.lastName }}</h2>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { User } from '../../models/User';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\n\r\nexport class UserComponent implements OnInit {\r\n  // Properties\r\n  user: User;\r\n\r\n  // Methods\r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user = {\r\n      firstName: '',\r\n      lastName: '',\r\n      quote: '',\r\n\r\n    };\r\n  }\r\n}\r\n","module.exports = \"#buttoncolor{\\n    color: aliceblue;\\n    font-weight: bolder;\\n}\"","module.exports = \"<button (click)=\\\"showUserForm = !showUserForm\\\" class=\\\"btn btn-dark mb-2\\\">Add Quote</button>\\n<div class=\\\"card card-body mb-3\\\" *ngIf=\\\"showUserForm\\\">\\n  <h3>Please type in your details and quote</h3>\\n  <form #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(userForm)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>First Name</label>\\n      <input \\n        type=\\\"text\\\" \\n        [(ngModel)]=\\\"user.firstName\\\" \\n        [ngClass]=\\\"{'is-invalid':userFirstName.errors && userFirstName.touched}\\\"\\n        class=\\\"form-control\\\" \\n        name=\\\"firstName\\\"\\n        #userFirstName=\\\"ngModel\\\"\\n        required\\n        minlength=\\\"2\\\"\\n      >\\n      <div [hidden]=\\\"!userFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n        Please enter your first name.\\n      </div>\\n\\n      <div [hidden]=\\\"!userFirstName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Your name must have at least 2 characters.\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Second Name</label>\\n      <input \\n        type=\\\"text\\\" \\n        [(ngModel)]=\\\"user.lastName\\\" \\n        [ngClass]=\\\"{'is-invalid':userLastName.errors && userLastName.touched}\\\"\\n        class=\\\"form-control\\\" \\n        name=\\\"lastName\\\"\\n        #userLastName=\\\"ngModel\\\"\\n        required\\n        minlength=\\\"2\\\"\\n      >\\n      <div [hidden]=\\\"!userLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n        Please enter your second name.\\n      </div>\\n\\n      <div [hidden]=\\\"!userLastName.errors?.minlength\\\" class=\\\"invalid-feedback\\\">\\n          Your name must have at least 2 characters.\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Quotes</label>\\n      <input type=\\\"text\\\"\\n      [(ngModel)]=\\\"user.quote\\\"\\n      [ngClass]=\\\"{'is-invalid':userQuote.errors && userQuote.touched}\\\"\\n      class=\\\"form-control\\\"\\n      name=\\\"quote\\\"\\n      #userQuote=\\\"ngModel\\\"\\n      required\\n      >\\n      <div [hidden]=\\\"!userQuote.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n        Please type in a quote.\\n      </div>\\n      \\n    </div>\\n\\n    <button id =\\\"buttoncolor\\\"[disabled]=\\\"!userForm.form.valid\\\" class=\\\"btn bg-success mb-3\\\">Publish Quote</button>\\n  </form>\\n</div>\\n\\n  \\n<ul class=\\\"list-unstyled\\\" *ngIf=\\\"loaded && users?.length > 0\\\">\\n  <li class=\\\"card card-body mb-2\\\" *ngFor=\\\"let user of users\\\" [class.bg-light]=\\\"user.isActive\\\">\\n    <h3>{{ user.firstName }} {{ user.lastName }}\\n      <small>\\n        <button (click)=\\\"user.hide = !user.hide\\\" class=\\\"btn btn-dark btn-xs \\\">\\n          expand\\n        </button>\\n      </small>\\n    </h3>\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"!user.hide\\\">\\n      <li class=\\\"list-group-item\\\">Quote: \\\"{{ user.quote }}\\\"</li>\\n      <li class=\\\"list-group-item\\\">Posted at: {{ user.posted | date:'medium' }}</li>\\n      <li class=\\\"list-group-item\\\">Posted at: {{ user.date | dateCount }}</li>\\n      \\n      <app-likes></app-likes>\\n    </ul>\\n  </li>\\n  \\n</ul>\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { User } from '../../models/User';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  user: User = {\n    firstName: '',\n    lastName: '',\n    quote: ''\n  }\n  users: User[];\n  showExtended: boolean = true;\n  loaded: boolean = false;\n  enableAdd: boolean = false;\n  showUserForm: boolean = false;\n  @ViewChild('userForm') form: any;\n\n  constructor() { }\n\n  ngOnInit() {\n   \n      this.users = [\n        {\n          firstName: 'Nelson',\n          lastName: 'Mandela',\n// tslint:disable-next-line: max-line-length\n          quote: 'I learned that courage was not the absence of fear, but the triumph over it. The brave man is not he who does not feel afraid, but he who conquers that fear.',\n          isActive: true,\n          posted: new Date('01/02/1994 19:36:00'),\n          hide: true\n        },\n        {\n          firstName: 'Albert',\n          lastName: 'Einstein',\n          quote: 'Insanity: doing the same thing over and over again and expecting different results.',\n          isActive: false,\n          posted: new Date('8/3/1916 03:16:00'),\n          hide: true\n        },\n        {\n          firstName: 'Mario',\n          lastName: 'Puzo \"The Godfather\"',\n          quote: 'Great men are not born great, they grow great',\n          isActive: true,\n          posted: new Date('03/09/1971 12:43:00'),\n          hide: true\n        }\n      ];\n\n      this.loaded = true;\n  }\n\n\n  onSubmit({value, valid}: {value: User, valid: boolean}) {\n    if(!valid){\n      console.log('Form is not valid');\n    } else {\n      value.isActive = true;\n      value.posted = new Date();\n      value.hide = true;\n\n      this.users.unshift(value);\n\n      this.form.reset();\n    }\n  }\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateCount'\n})\nexport class DateCountPipe implements PipeTransform {\n\n  transform(value: any): number {\n    let today: Date = new Date(); //get current date and time\n    let todayWithNoTime: any = new Date(today.getFullYear(), today.getMonth(), today.getDate())\n    var dateDifference = Math.abs(value - todayWithNoTime) //returns value in miliseconds\n    const secondsInDay = 86400; //60 seconds * 60 minutes in an hour * 24 hours in a day\n    var dateDifferenceSeconds = dateDifference * 0.001; //converts miliseconds to seconds\n    var dateCounter = dateDifferenceSeconds / secondsInDay;\n\n    if (dateCounter >= 1 && value > todayWithNoTime) {\n      return dateCounter;\n    } else {\n      return 0;\n    }\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}